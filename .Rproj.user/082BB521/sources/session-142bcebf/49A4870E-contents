---
title: "script"
author: "Arthur Bazolli"
date: "10/06/2021"
output: html_document
---

```{r setup, echo=FALSE}
knitr::opts_knit$set(root.dir = "C:/Users/arthu/OneDrive/Documentos/R/Projects/monografia")

#tratamento de dados
library(tidyverse) 
library(modelr) 
library(readxl) 

#visualização de dados
library(corrplot)
library(knitr)

#mapas
library(sf) #mapas: base
library(ggmap) #google maps
library(tmap) #mapas interativos e mais
library(geobr) #mapas Ipea
library(aopdata) #dados do Projeto Acesso a Oportunidades (Ipea)

# estatística
library(stats)
library(lmtest) #modelo de regressão linear
library(spdep) #dependência espacial
library(car) #VIF
library(sandwich) #ep robustos
library(spatialreg) #SAC
```

# Tratamento de dados

## Dataframe principal
```{r dataframe}
#dataframe principal
df <- read_excel("~/R/Projects/monografia/db_quintoAndar/sp_venda_20200623_v5.xlsx") %>% 
  rename(banh = banheiros, cober = cobertura, mobil = mobiliado, banh_svc = banheiro_svc, gas_chuv = gas_chuveiro, novo_ref = novo_reformado, pisc_ap = piscina_priv, silen = silenciosa, pisc_pred = piscina_predio) %>% 
  mutate(quartos = quartos - suites) %>% #para evitar erros de medida 
  filter(for_rent == 1, andar < 40) %>% #andar maior é erro de medida, no caso de SP.
  select(-c(for_sale, for_rent, sale_price)) %>% #manter apenas aluguel
  na.omit() %>% 
  unite("latlon", lat:lon, sep = ",", remove = FALSE) %>% #manter apenas um apartamento por edifício
  distinct(latlon, .keep_all = TRUE) %>% 
  select(-latlon) %>% 
  st_as_sf(coords = c("lon", "lat"), crs = 4326, remove = FALSE) %>% 
  st_transform(crs = 31983)

df <- df[-1178,] #imóvel dentro de hex sem CMATT60
```


## Carregamento de dados espaciais
```{r limites}
sao <- read_municipality(code_muni=3550308, year=2019, showProgress = FALSE) %>% st_transform(crs = 31983)
distritos <- st_read(dsn = "shp_limites_adm/SIRGAS_SHP_distrito_polygon.shp", crs = 31983)
subprefeituras <- st_read(dsn = "shp_limites_adm/SIRGAS_SHP_subprefeitura_polygon.shp", crs = 31983)

#mapa base
tmap_mode("view")
mapa_0 <- tm_shape(subprefeituras) +
  tm_borders(col = "black") 
mapa_0
```

```{r metro}
linhas_metro <- st_read(dsn = "shp_metro/SIRGAS_SHP_linhametro_line.shp", crs = 31983) %>% arrange(lmt_linha)
station_metro <- st_read(dsn = "shp_metro/SIRGAS_SHP_estacaometro_point.shp", crs = 31983)

linhas_cptm <- st_read(dsn = "shp_metro/SIRGAS_SHP_linhatrem.shp", crs = 31983) %>% arrange(ltr_numero)
station_cptm <- st_read(dsn = "shp_metro/SIRGAS_SHP_estacaotrem_point.shp", crs = 31983)

#mapa do metrô
mapa_metro <- mapa_0 +
  tm_shape(linhas_metro[1,]) +
  tm_lines(col = "#0153a0", lwd = 2) +
  tm_shape(linhas_metro[2,]) +
  tm_lines(col = "#008061", lwd = 2) +
  tm_shape(linhas_metro[3,]) +
  tm_lines(col = "#ee3e34", lwd = 2) +
  tm_shape(linhas_metro[4,]) +
  tm_lines(col = "#fed304", lwd = 2) +
  tm_shape(linhas_metro[5,]) +
  tm_lines(col = "#784d9f", lwd = 2) +
  tm_shape(linhas_metro[6,]) +
  tm_lines(col = "#858d90", lwd = 2) 

#mapa da cptm
mapa_cptm <- mapa_0 +
  tm_shape(linhas_cptm[1:19,]) +
  tm_lines(col = "#9e1766", lwd = 2) +
  tm_shape(linhas_cptm[20:21,]) +
  tm_lines(col = "#9e9e93", lwd = 2) +
  tm_shape(linhas_cptm[22:27,]) +
  tm_lines(col = "#00a78e", lwd = 2) +
  tm_shape(linhas_cptm[28:31,]) +
  tm_lines(col = "#007c8f", lwd = 2) +
  tm_shape(linhas_cptm[32:33,]) +
  tm_lines(col = "#f04d22", lwd = 2) +
  tm_shape(linhas_cptm[34:41,]) +
  tm_lines(col = "#083e89", lwd = 2) +
  tm_shape(linhas_cptm[42:45,]) +
  tm_lines(col = "#00ab5b", lwd = 2)
```

```{r zeis}
#ZEIS 1: favelas, loteamentos irregulares, HIS, e assentamentos habitacionais populares
zeis_1 <- st_read(dsn = "shp_zonas/sirgas_PDE_4-Zeis1.shp", crs = 31983) %>% 
  select(-tx_observa) #remover coluna de NAs que estragava o negócio

zeis_outras <- st_read(dsn = "shp_zonas/sirgas_PDE_4A-Zeis_outras.shp", crs = 31983)

#ZEIS 3 e ZEIS 5: áreas e lotes ociosos em regiões dotadas de infraestrutura
zeis_3 <- zeis_outras %>% 
  filter(cd_zoneame == "ZEIS-3")

zeis_5 <- zeis_outras %>% 
  filter(cd_zoneame == "ZEIS-5")

#viz
tm_shape(subprefeituras) +
  tm_borders() +
  tm_shape(zeis_1) +
  tm_fill(col = "#973116" ) +
  tm_shape(zeis_5) +
  tm_fill(col = "#00a86b") + 
  tm_shape(df, is.master = TRUE) +
  tm_dots(col = "aluguel", palette = "inferno", style = "sd") 
```

```{r qamb}
qamb <- st_read(dsn = "shp_zonas/QA.shp", crs = 31983)

#Mensagem de erro: "(...) Geometry of polygon of fid 40654 cannot be translated to Simple Geometry (...)" -> remver a linha 40655 (sim)
qamb <- qamb[-40655,]

#viz
#tm_shape(qamb) +
#  tm_fill(col = "PQA", alpha = 0.5, palette = "-inferno")
```

```{r parques}
parques <- st_read(dsn = "shp_verde/SIRGAS_SHP_parquemunicipal.shp", crs = 31983) 
conserva <- st_read(dsn = "shp_verde/SIRGAS_SHP_unidadeconservacao.shp", crs = 31983) 

tm_shape(parques) +
  tm_fill(col = "darkcyan") +
  tm_shape(conserva) +
  tm_fill(col = "darkgreen") +
  tm_shape(df) +
  tm_dots(col = "aluguel", palette = "inferno", style = "sd")
```

```{r aop}
aop_sao <- read_access(city = "São Paulo", mode = "public_transport", peak = TRUE, geometry = TRUE) %>% 
  st_transform(crs = 31983)
saogrid <- read_grid(city = "São Paulo") %>% 
  st_transform(crs = 31983)
```

transplantar isso aqui
```{r aluguel_med_hex}
join <- st_join(saogrid, select(df, c(id, aluguel))) %>% 
  na.omit()

jmap <- join %>% group_by(id_hex) %>% 
  summarise(aluguel_med = mean(aluguel, na.rm = TRUE)) %>%
  select(aluguel_med) 
tmap_mode("view")
tm_shape(jmap) +
  tm_fill(col = "aluguel_med", palette = "viridis", alpha = 0.5)
```



```{r mapas aop}
#tmap
tmap_mode("plot")
tm_shape(read_state(code_state = "SP")) +
  tm_fill(col = "grey") +
  tm_shape(aop_sao) +
  tm_fill(col = "CMATT60", palette = "viridis", title = "Trabalhos (%)") +
  tm_shape(sao, is.master = TRUE) +
  tm_borders(col = "black") +
  #tm_shape(df[1:100,]) +
  #tm_dots()
  tm_layout(legend.position = c("right", "bottom"), title.position = c("left", "top"), title = "Tabalhos acessíveis em 60 min", bg.color = "#4a80f5")

#ggplot
ggplot() +
  geom_sf(data=aop_sao, aes(fill=CMATT60), color=NA, alpha=.9) +
  scale_fill_viridis_c(option = "inferno", labels=scales::percent) +
  labs(title='Proporção de trabalhos acessíveis', fill="Acessibilidade",
       subtitle='por transporte público em menos de 60 min.', caption = "Fonte: Pereira et al. (2020)") +
  theme_void()
```


## Relações topológicas
```{r dist_metro}
dist_transit <- data.frame(dist_metro = 1, dist_cptm = 1)

for(i in 1:nrow(df)) {
  dist_transit[i,1] <- min(st_distance(df[i,], station_metro))
  dist_transit[i,2] <- min(st_distance(df[i,], station_cptm))
}
```


```{r dist_zeis1}
nearest_zeis1 <- data.frame(nrst_zeis1 = st_nearest_feature(df, zeis_1))
dist_zeis1 <- data.frame(dist_zeis1 = 0)

for(i in 1:nrow(df)) {
  dist_zeis1[i,] <- st_distance(df[i,], zeis_1[nearest_zeis1[i,],])
}

#viz
#tm_shape(zeis_1) +
#  tm_borders(col = "red")
```


```{r dist_zeis3}
nearest_zeis35 <- data.frame(nrst_zeis35 = st_nearest_feature(df, zeis_35))
dist_zeis35 <- data.frame(dist_zeis35 = 0)

for(i in 1:nrow(df)) {
  dist_zeis35[i,] <- st_distance(df[i,], zeis_35[nearest_zeis35[i,],])
}

#VIZ
#zc <- cbind(df, dist_zeis35) %>% 
#  filter(in_zeis35 == 1)

#tm_shape(zc) +
#  tm_dots(col = "blue") +
#  tm_shape(zeis_35) +
#  tm_borders(col = "red")
```

```{r dist_zeis3}
nearest_zeis3 <- data.frame(nrst_zeis3 = st_nearest_feature(df, zeis_3))
dist_zeis3 <- data.frame(dist_zeis3 = 0)

for(i in 1:nrow(df)) {
  dist_zeis3[i,] <- st_distance(df[i,], zeis_3[nearest_zeis3[i,],])
}

#VIZ
#zc <- cbind(df, dist_zeis35) %>% 
#  filter(in_zeis35 == 1)

#tm_shape(zc) +
#  tm_dots(col = "blue") +
#  tm_shape(zeis_35) +
#  tm_borders(col = "red")
```


```{r dist_zeis5}
nearest_zeis5 <- data.frame(nrst_zeis5 = st_nearest_feature(df, zeis_5))
dist_zeis5 <- data.frame(dist_zeis5 = 0)

for(i in 1:nrow(df)) {
  dist_zeis5[i,] <- st_distance(df[i,], zeis_5[nearest_zeis5[i,],])
}

#VIZ
#zc <- cbind(df, dist_zeis35) %>% 
#  filter(in_zeis35 == 1)

#tm_shape(zc) +
#  tm_dots(col = "blue") +
#  tm_shape(zeis_35) +
#  tm_borders(col = "red")
```


```{r dist_verde}
#nearest_parque <- data.frame(nrst_parque = st_nearest_feature(df, parques))
#nearest_conserva <- data.frame(nrst_conserva = st_nearest_feature(df, conserva))
dist_verde <- data.frame(dist_parque = 0, dist_conserva = 0)

for(i in 1:nrow(df)) {
  dist_verde[i,1] <- min(st_distance(df[i,], parques))
  dist_verde[i,2] <- min(st_distance(df[i,], conserva))
}
```


```{r my_qamb}
nearest_qamb <- st_nearest_feature(df, qamb)
my_qamb <- c(qamb[nearest_qamb,]$PQA) %>% 
  str_remove("PA ") %>% 
  as.numeric() %>% 
  data.frame(qamb = .)
```


```{r dist_cbd}
dist_cbd <- data.frame(dist_se = 0, dist_paulista = 0, dist_olimpia = 0, dist_farialima = 0, dist_ibirapuera = 0, dist_cbd = 0)

#CBD = Sé:
for(i in 1:nrow(df)) {
  dist_cbd[i,1] <- st_distance(df[i,], station_metro[13,])
}

#CBD = Paulista:
for(i in 1:nrow(df)) {
  dist_cbd[i,2] <- st_distance(df[i,], station_metro[81,])
}


#CBD = Vila Olímpia:
for(i in 1:nrow(df)) {
  dist_cbd[i,3] <- st_distance(df[i,], station_cptm[8,])
}

#CBD = Faria Lima:
farialima <- st_point(x = c(328338.25, 7390430.51), dim = "XY") %>%
  st_sfc(crs = 31983)
for(i in 1:nrow(df)) {
  dist_cbd[i,4] <- st_distance(df[i,], farialima)
}

#CBD = Ibirapuera:
ibirapuera <- st_point(x = c(330519.19, 7390791.59), dim = "XY") %>%
  st_sfc(crs = 31983)
for(i in 1:nrow(df)) {
  dist_cbd[i,5] <- st_distance(df[i,], ibirapuera)
}

#CBD mais próximo
cbd <- data.frame(cbd = c("se", "farialima"),
             geometry = c(station_metro[13,]$geometry, farialima)) %>% 
  st_as_sf()

nearest_cbd <- st_nearest_feature(df, cbd)


for(i in 1:nrow(df)) {
  dist_cbd[i, 6] <- as.numeric(st_distance(df[i,], cbd[nearest_cbd[i],]))
}

#meh
drop_units <- function(x) {
  class(x) <- setdiff(class(x), "units")
  attr(x, "units") <- NULL
  x
}
dist_cbd$dist_cbd <- drop_units(dist_cbd$dist_cbd)
```


```{r cmatt60}
nearest_hex <- st_nearest_feature(df, aop_sao)
cmatt60 <- data.frame(cmatt60 = aop_sao[nearest_hex,]$CMATT60)

#tm_shape(df) +
#  tm_dots(col = "cmatt60", palette = "inferno") +
#  mapa_metro +
#  mapa_cptm
```


```{r agreg_dist}
df_dist <- cbind(dist_transit, dist_zeis1, dist_zeis3, dist_zeis5, dist_verde, dist_cbd, cmatt60, my_qamb) %>% 
  mutate(dist_metro = dist_metro/1000, dist_cptm = dist_cptm/1000, dist_zeis1 = dist_zeis1/1000, dist_zeis3 = dist_zeis3/1000, dist_zeis5 = dist_zeis5/1000, dist_parque = dist_parque/1000, dist_conserva = dist_conserva/1000, dist_se = dist_se/1000, dist_olimpia = dist_olimpia/1000, dist_farialima = dist_farialima/1000, dist_cbd = dist_cbd/1000, cmatt60 = 10*cmatt60)

df <- cbind(df, df_dist)
```

```{r crime}
dados_ssp_tidy <- dados_ssp %>% 
  select(COD_DIST_A, crimes_hediondos, roubo_veiculo, furto_veiculo, roubo_furto_veiculo, total_roubo_outros, furto_outros)

df <- df %>%
  st_join(dados_ssp_tidy, st_covered_by)
```
A observação do index 1011 está na DP do Campo Limpo mas, por erro do shapefile, caiu fora. É precisao alterar manualmente:
```{r}
dados_ssp %>% filter(COD_DIST_A == 37) %>% select(COD_DIST_A, crimes_hediondos, roubo_veiculo, furto_veiculo, roubo_furto_veiculo, total_roubo_outros, furto_outros)

df[1011, 59:65] <- dados_ssp %>% filter(COD_DIST_A == 37) %>% select(COD_DIST_A, crimes_hediondos, roubo_veiculo, furto_veiculo, roubo_furto_veiculo, total_roubo_outros, furto_outros)
```



# Regressão

## Estruturais + metro_trem
```{r reg1}
reg1 <- lm(data = df, log(aluguel) ~ area + banh + andar + tipo + arcond + armqua + banh_svc	+ gas_chuv	+ mobil	+ novo_ref	+ academia + gas_cano + quadra + sauna	+ metro_trem)

summary(reg1)


data.frame(Valor = 100*(exp(reg1$coefficients[-1]) - 1)) %>% 
  arrange(desc(Valor)) %>% 
  kable(digits = 2, align = "c", caption = "Impacto no aluguel das variáveis explicativas (%)") 

data.frame(Valor = exp(reg1$coefficients[1])) %>% 
  kable(digits = 2, align = "c", caption = "Aluguel médio")

#adicionar resíduos ao dataframe
df_1 <- add_residuals(df, reg1, var = "resid") %>% 
  mutate(resid_n = (resid - mean(resid))/sd(resid))

#vcov_7 <- vcov(reg7)
#corrplot(vcov_7[1:8,1:8], method = "number")
#corrplot(vcov_7[9:16,9:16], method = "number")
#corrplot(vcov_7[9:16,1:8], method = "number")
#corrplot(vcov_7[1:8,9:16], method = "number")
```

## Estruturais + zeis + parques + dist transp
```{r reg2}
reg2 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond + armqua + banh_svc	+ gas_chuv	+ mobil	+ novo_ref	+ academia + gas_cano + quadra + sauna	+ 
             dist_parque + dist_conserva + qamb + dist_zeis1 + dist_zeis3 + dist_zeis5 + 
             dist_metro + dist_cptm)
summary(reg2)

reg2_2 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_parque + dist_conserva + qamb + dist_zeis1 + dist_zeis3 + dist_zeis5 + 
             dist_metro + dist_cptm)
summary(reg2_2)

reg2_3 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb + 
             dist_metro + dist_cptm)
summary(reg2_3)

reg2_4 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_zeis1 + dist_zeis5 + qamb + 
             dist_metro + dist_cptm)
summary(reg2_4)

data.frame(Valor = 100*(exp(reg2$coefficients[-1]) - 1)) %>% 
  arrange(desc(Valor)) %>% 
  kable(digits = 2, align = "c", caption = "Impacto no aluguel das variáveis explicativas (%)") 

data.frame(Valor = exp(reg2$coefficients[1])) %>% 
  kable(digits = 2, align = "c", caption = "Aluguel médio")

#adicionar resíduos ao dataframe
df_2 <- add_residuals(df, reg2, var = "resid") %>% 
  mutate(resid_n = (resid - mean(resid))/sd(resid))
```

## Estruturais + zeis + dist transp + dist_cbd^2 + dist_cbd
```{r reg3}
#CBD mais próximo (duoêntrico). Se quadrático, parábola invertida, não faz sentido.
reg3 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + I(dist_cbd^2) + dist_cbd)
summary(reg3)

reg3_2 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_parque + dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + I(dist_cbd^2) + dist_cbd)
summary(reg3_2)

#CBD sem quadrático: passa, desde que sem zeis3 e sem parque
reg3_3 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + dist_cbd)
summary(reg3_3)


#CBD = sé: não é quadrática.
reg3_4 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + I(dist_se^2) + dist_se)
summary(reg3_4)

reg3_5 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + I(dist_se^2) + dist_se)
summary(reg3_5)

reg3_6 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + dist_se)
summary(reg3_6)


#CBD = farialima: maybe é quadrática?
reg3_7 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + tipo + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + I(dist_farialima^2) + dist_farialima)
summary(reg3_7)

reg3_8 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + I(dist_farialima^2) + dist_farialima)
summary(reg3_8)

reg3_9 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna + 
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + dist_farialima)
summary(reg3_9) 


data.frame(Valor = 100*(exp(reg3$coefficients[-1]) - 1)) %>% 
  arrange(desc(Valor)) %>% 
  kable(digits = 2, align = "c", caption = "Impacto no aluguel das variáveis explicativas (%)") 

data.frame(Valor = exp(reg3$coefficients[1])) %>% 
  kable(digits = 2, align = "c", caption = "Aluguel médio")

#adicionar resíduos ao dataframe
df_3 <- add_residuals(df, reg3, var = "resid") %>% 
  mutate(resid_n = (resid - mean(resid))/sd(resid))

summary(reg3_3)
summary(reg3_6)
summary(reg3_9)
```

## Estruturais + zeis + dist_transp + dist_cbd e/ou cmatt60
```{r reg4}
#CBD mais próximo (duocêntrico): 
reg4_0 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
               dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
               dist_metro + dist_cptm + dist_cbd + cmatt60)
summary(reg4_0)

reg4 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + dist_cbd + cmatt60)
summary(reg4)


#CBD = sé: not really
reg4_2 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
               dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
               dist_metro + dist_cptm + dist_se + cmatt60)
summary(reg4_2)

reg4_3 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + dist_se + cmatt60)
summary(reg4_3)


#CBD = olímpia: oh yes
reg4_4 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
               dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
               dist_metro + dist_cptm + dist_farialima + cmatt60)
summary(reg4_4)

reg4_5 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + dist_farialima + cmatt60)
summary(reg4_5)


#metro, cptm e cmatt60
reg4_6 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
               dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
               dist_metro + dist_cptm + cmatt60)
summary(reg4_6)

reg4_7 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             dist_metro + dist_cptm + cmatt60)
summary(reg4_7)


#Apenas cmatt60
reg4_8 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
               dist_parque + dist_conserva + dist_zeis1 + dist_zeis3 + dist_zeis5 + qamb +
               cmatt60)
summary(reg4_8)

reg4_9 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + log(crimes_hediondos) +
             cmatt60)
summary(reg4_9)

data.frame(Valor = 100*(exp(reg4$coefficients[-1]) - 1)) %>% 
  arrange(desc(Valor)) %>% 
  kable(digits = 2, align = "c", caption = "Impacto no aluguel das variáveis explicativas (%)") 

data.frame(Valor = exp(reg4$coefficients[1])) %>% 
  kable(digits = 2, align = "c", caption = "Aluguel médio")

#adicionar resíduos ao dataframe
#df_4 <- add_residuals(df, reg4, var = "resid") %>% 
#  mutate(resid_n = (resid - mean(df_4$resid, na.rm = TRUE))/sd(df_4$resid, na.rm = TRUE))
```


# Checando premissas RLM

# Multicolinearidade
```{r VIF}
kable(vif(reg3_3), digits = 2, caption = "VIF - regressão 3.3")

kable(vif(reg3_6), digits = 2, caption = "VIF - regressão 3.6")

kable(vif(reg3_9), digits = 2, caption = "VIF - regressão 3.9")

kable(vif(reg4_0), digits = 2, caption = "VIF - regressão 4.0")

kable(vif(reg4), digits = 2, caption = "VIF - regressão 4.1")

kable(vif(reg4_5), digits = 2, caption = "VIF - regressão 4.5")

kable(vif(reg4_7), digits = 2, caption = "VIF - regressão 4.7")
```

# Heterocedasticidade
```{r bptest}
#Ninguém acertô!
bptest(reg3_3) #worst of reg3
bptest(reg3_6) 
bptest(reg3_9) #least worst of reg3

bptest(reg4)
bptest(reg4_3) #least worst of all!
bptest(reg4_5) 
bptest(reg4_7)
bptest(reg4_9) #absolutely worst
```

```{r resid_hist}
ggplot(data = reg3_9) +
  geom_histogram(aes(x = reg3_9$residuals), binwidth = 0.03125) +
  theme_classic()

ggplot(data = reg4_5) +
  geom_histogram(aes(x = reg4_7$residuals), binwidth = 0.03125) +
  theme_classic()
```

```{r bp_manual}
regres_39 <- lm(data = df, I(reg3_9$residuals^2) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima)
summary(regres_39)

regres_39 <- lm(data = df, I(reg3_9$residuals^2) ~ log(area) + banh + andar	+ gas_chuv	+ mobil	+ novo_ref + academia + sauna +
             dist_conserva + dist_zeis1 + qamb +
             dist_metro + dist_cptm + dist_farialima)
summary(regres_39)


regres_45 <- lm(data = df, I(reg4_5$residuals^2) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima + cmatt60)
summary(regres_45)

regres_45 <- lm(data = df, I(reg4_5$residuals^2) ~ log(area) + banh + andar	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + qamb +
             dist_metro + dist_cptm + dist_farialima + cmatt60)
summary(regres_45)
```

```{r resid_plot}
ggplot(data = df, aes(x = dist_zeis5, y = resid(reg3_9)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = df, aes(x = dist_zeis5, y = resid(reg4_5)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = df, aes(x = dist_farialima, y = resid(reg3_9)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = df, aes(x = dist_farialima, y = resid(reg4_5)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = df, aes(x = dist_conserva, y = resid(reg3_9)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = df, aes(x = dist_conserva, y = resid(reg4_5)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = reg3_9, aes(x = fitted(reg3_9), y = resid(reg3_9)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()

ggplot(data = reg3_9, aes(fitted(reg4_5), y = resid(reg4_5)^2)) +
  geom_point() +
  theme_classic() +
  stat_smooth()
```

```{r reset}
#não passa: tem algo errado
reset(reg3_9, power = 2:3)
reset(reg4_5, power = 2:3)
```

```{r goldfeld-quandt}
#passa: var não muda de arcond = 0 para arcond = 1.
gqtest(reg3_9, order.by = ~arcond, data = df)
gqtest(reg4_5, order.by = ~arcond, data = df)

#idem
gqtest(reg3_9, order.by = ~gas_chuv, data = df)
gqtest(reg4_5, order.by = ~gas_chuv, data = df)

#tribidem
gqtest(reg3_9, order.by = ~mobil, data = df)
gqtest(reg4_5, order.by = ~mobil, data = df)

#mais-que-tribidem
gqtest(reg3_9, order.by = ~novo_ref, data = df)
gqtest(reg4_5, order.by = ~novo_ref, data = df)

#pentibidem
gqtest(reg3_9, order.by = ~sauna, data = df)
gqtest(reg4_5, order.by = ~sauna, data = df)

# hmmm now there`s something!!!
gqtest(reg3_9, order.by = ~academia, data = df)
gqtest(reg4_5, order.by = ~academia, data = df)
```

```{r shapiro_wilk}
#fail!!
shapiro.test(reg3_9$residuals)
shapiro.test(reg4_5$residuals)
```

```{r corrplot}
yell39 <- data.frame(u_sq = residuals(reg3_9)^2, y = fitted(reg3_9), logarea = log(df$area), banh = df$banh, andar = df$andar, arcond = df$arcond, gas_chuv = df$gas_chuv, mobil = df$mobil, novo_ref = df$novo_ref, academia = df$academia, sauna = df$sauna, conserva = df$dist_conserva, zeis_1 = df$dist_zeis1, zeis_5 = df$dist_zeis5, qamb = df$qamb, dist_metro = df$dist_metro, dist_cptm = df$dist_cptm, dist_farialima = df$dist_farialima)

yell45 <- data.frame(u_sq = residuals(reg4_5)^2, y = fitted(reg4_5), logarea = log(df$area), banh = df$banh, andar = df$andar, arcond = df$arcond, gas_chuv = df$gas_chuv, mobil = df$mobil, novo_ref = df$novo_ref, academia = df$academia, sauna = df$sauna, conserva = df$dist_conserva, zeis_1 = df$dist_zeis1, zeis_5 = df$dist_zeis5, qamb = df$qamb, dist_metro = df$dist_metro, dist_cptm = df$dist_cptm, dist_farialima = df$dist_farialima, cmatt60 = df$cmatt60)

corrplot(cor(yell39), method = "color")
corrplot(cor(yell45), method = "color")
```


## EP Robustos
```{r ep_robust}
summary(reg3_9)
coeftest(reg3_9, vcov. = vcovHC(reg3_9), type = "HC3")
```


## MQP
```{r wls_matrix}
#reg 3.3
reg_u2_33 <- lm(data = df, log(reg3_3$residuals^2) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_cbd)

summary(reg_u2_33)

wt33 <- 1/exp(fitted(reg_u2_33))

reg_u2_332 <- lm(data = df, log(reg3_3$residuals^2) ~ arcond)

wt332 <- 1/exp(fitted(reg_u2_332))

reg_u2_333 <- lm(data = df, log(reg3_3$residuals^2) ~ reg3_3$fitted.values + I(reg3_3$fitted.values)^2)

wt333 <- 1/exp(fitted(reg_u2_333))


#reg 3.6
reg_u2_36 <- lm(data = df, log(reg3_3$residuals^2) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_se)

summary(reg_u2_36)

wt36 <- 1/exp(fitted(reg_u2_36))


#reg 3.9
reg_u2_39 <- lm(data = df, log(reg3_9$residuals^2) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima)

summary(reg_u2_39)

wt39 <- 1/exp(fitted(reg_u2_39))


#reg 4.5
reg_u2_45 <- lm(data = df, log(reg4_5$residuals^2) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima + cmatt60)

summary(reg_u2_45)

wt45 <- 1/exp(fitted(reg_u2_39))
```

```{r wls}
#reg 3.3w
reg3_3w <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_cbd, weights = wt33)
summary(reg3_3w)

reg3_3w2 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_cbd, weights = wt332)
summary(reg3_3w2)

reg3_3w3 <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_cbd, weights = wt333)
summary(reg3_3w3)

stargazer(type = "text", reg3_3, reg3_3w, reg3_3w2, reg3_3w3)

#reg 3.6w
reg3_6w <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_se, weights = wt36)
summary(reg3_6w)

#reg 3.9w
reg3_9w <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima, weights = wt39)
summary(reg3_9w)

#reg 4.5w
reg4_5w <- lm(data = df, log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima + cmatt60, weights = wt45)
summary(reg4_5w)
```


```{r comparation}
cbind(reg3_9$coefficients, 
      reg3_9w$coefficients) %>% 
  kable(digits = 4, align = "c", caption = "4.5: MQO vs MQP")

cbind(reg4_5$coefficients, 
      reg4_5w$coefficients) %>% 
  kable(digits = 4, align = "c", caption = "4.5: MQO vs MQP")
```


# Análise espacial

## Matrizes de peso
```{r nb_matrix}
coords <- cbind(df$lon, df$lat)

distband3 <- dnearneigh(coords, 0, 3, longlat = TRUE)
distmatrix3 <- nb2listw(distband3)

knn5 <- knearneigh(coords, k = 5)
k5 <- knn2nb(knn5)
critical.threshold5 <- max(unlist(nbdists(k5,coords, longlat = TRUE)))
critical.threshold5
distband5 <- dnearneigh(coords, 0, critical.threshold5, longlat = TRUE)
distmatrix5 <- nb2listw(distband5)


knn10 <- knearneigh(coords, k = 10)
k10 <- knn2nb(knn10)
critical.threshold10 <- max(unlist(nbdists(k10,coords, longlat = TRUE)))
critical.threshold10
distband10 <- dnearneigh(coords, 0, critical.threshold10, longlat = TRUE)
distmatrix10 <- nb2listw(distband10)


knn25 <- knearneigh(coords, k = 25)
k25 <- knn2nb(knn25)
critical.threshold25 <- max(unlist(nbdists(k25,coords, longlat = TRUE)))
critical.threshold25
distband25 <- dnearneigh(coords, 0, critical.threshold25, longlat = TRUE)
distmatrix25 <- nb2listw(distband25)


knn50 <- knearneigh(coords, k = 50)
k50 <- knn2nb(knn50)
critical.threshold50 <- max(unlist(nbdists(k50,coords, longlat = TRUE)))
critical.threshold50
distband50 <- dnearneigh(coords, 0, critical.threshold50, longlat = TRUE)
distmatrix50 <- nb2listw(distband50)


knn100 <- knearneigh(coords, k = 100)
k100 <- knn2nb(knn100)
critical.threshold100 <- max(unlist(nbdists(k100,coords, longlat = TRUE)))
critical.threshold100
distband100 <- dnearneigh(coords, 0, critical.threshold100, longlat = TRUE)
distmatrix100 <- nb2listw(distband100)


knn250 <- knearneigh(coords, k = 250)
k250 <- knn2nb(knn250)
critical.threshold250 <- max(unlist(nbdists(k250,coords, longlat = TRUE)))
critical.threshold250
distband250 <- dnearneigh(coords, 0, critical.threshold250, longlat = TRUE)
distmatrix250 <- nb2listw(distband250)
```

## Moran global
```{r moran3_25 3_3} 
moran.test(resid(reg3_3), listw = distmatrix3)
moran.test(resid(reg3_3), listw = distmatrix5)
moran.test(resid(reg3_3), listw = distmatrix25)

moran.test(resid(reg3_3w), listw = distmatrix3)
moran.test(resid(reg3_3w), listw = distmatrix5)
moran.test(resid(reg3_3w), listw = distmatrix25)
```

```{r moran 3_6}
moran.test(resid(reg3_6), listw = distmatrix3)
```

```{r moran3_25 3_9} 
moran.test(resid(reg3_9), listw = distmatrix3)
moran.test(resid(reg3_9), listw = distmatrix5)
moran.test(resid(reg3_9), listw = distmatrix25)

moran.test(resid(reg3_9w), listw = distmatrix3)
moran.test(resid(reg3_9w), listw = distmatrix5)
moran.test(resid(reg3_9w), listw = distmatrix25)
```


```{r moran3_25 4} 
moran.test(resid(reg4), listw = distmatrix3)
moran.test(resid(reg4), listw = distmatrix5)
moran.test(resid(reg4), listw = distmatrix25)
```

```{r moran 4_3}
moran.test(resid(reg4_3), listw = distmatrix3)
```

```{r moran3_25 4_5}
moran.test(resid(reg4_5), listw = distmatrix3)
moran.test(resid(reg4_5), listw = distmatrix5)
moran.test(resid(reg4_5), listw = distmatrix25)

moran.test(resid(reg4_5w), listw = distmatrix3)
moran.test(resid(reg4_5w), listw = distmatrix5)
moran.test(resid(reg4_5w), listw = distmatrix25)
```

```{r moran3_25 4_7} 
moran.test(resid(reg4_7), listw = distmatrix3)
moran.test(resid(reg4_7), listw = distmatrix5)
moran.test(resid(reg4_7), listw = distmatrix25)
```

```{r moran3_25 4_9} 
moran.test(resid(reg4_9), listw = distmatrix3)
moran.test(resid(reg4_9), listw = distmatrix5)
moran.test(resid(reg4_9), listw = distmatrix25)
```

```{r moran 10}
moran.test(resid(reg3_3), listw = distmatrix10)
moran.test(resid(reg4), listw = distmatrix10)
moran.test(resid(reg4_7), listw = distmatrix10)
moran.test(resid(reg4_9), listw = distmatrix10)
```


Valores negativos!
```{r moran resto, eval=FALSE}
moran.test(resid(reg4_5), listw = distmatrix10)
moran.test(resid(reg4_5), listw = distmatrix50)
moran.test(resid(reg4_5), listw = distmatrix100)
moran.test(resid(reg4_5), listw = distmatrix250)

moran.test(resid(reg4_5w), listw = distmatrix10)
moran.test(resid(reg4_5w), listw = distmatrix50)
moran.test(resid(reg4_5w), listw = distmatrix100)
moran.test(resid(reg4_5w), listw = distmatrix250)
```

## Mapa agregado
```{r o_join}
join <- st_join(distritos, select(df, c(id, aluguel))) %>% 
  na.omit()

tm_shape(jmap) +
  tm_fill(col = "aluguel", palette = "viridis")

joinhex <- st_join(saogrid, select(df, c(id, aluguel))) %>% 
  na.omit() 
```
## Moran local
```{r localmoran3}
localmoran3 <- localmoran(log(join$aluguel), distmatrix3)

join$logalug_s <- scale(log(join$aluguel)) %>% as.vector()
join$lag_logalug_s <- lag.listw(distmatrix3, join$logalug_s)

join$quad_sig <- NA
join[(join$logalug_s >= 0 & join$lag_logalug_s >= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 1
join[(join$logalug_s <= 0 & join$lag_logalug_s <= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 2
join[(join$logalug_s >= 0 & join$lag_logalug_s <= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 3
join[(join$logalug_s <= 0 & join$lag_logalug_s >= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 4
join[(localmoran3[, 5] >= 0.05), "quad_sig"] <- 5 

#Mapeamento do LISA
breaks <- seq(1, 5, 1)
np <- findInterval(jmap$quad_sig, breaks)
labels <- c("alto-alto", "baixo-baixo", "alto-baixo", "baixo-alto", "não signif.")

#Estabelecendo cores para cada tipo de cluster
colors <- c("red", "blue", "lightpink", "skyblue2", "white")

# Plot por distrito
jmap <- join %>% group_by(ds_codigo) %>% 
  summarise_at(c("aluguel", "logalug_s", "lag_logalug_s", "quad_sig"), mean, na.rm = TRUE) %>% 
  mutate(sig_r = round(quad_sig, digits = 0))

tm_shape(sao) +
  tm_borders() +
  tm_shape(jmap) +
  tm_fill(col = "sig_r", palette = "inferno", breaks = c(1, 2, 3, 4, 5, 6), labels = labels, alpha = 0.5)


# Plot por hex
joinhex$logalug_s <- scale(log(joinhex$aluguel)) %>% as.vector()
joinhex$lag_logalug_s <- lag.listw(distmatrix3, joinhex$logalug_s)

joinhex$quad_sig <- NA
joinhex[(joinhex$logalug_s >= 0 & joinhex$lag_logalug_s >= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 1
joinhex[(joinhex$logalug_s <= 0 & joinhex$lag_logalug_s <= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 2
joinhex[(joinhex$logalug_s >= 0 & joinhex$lag_logalug_s <= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 3
joinhex[(joinhex$logalug_s <= 0 & joinhex$lag_logalug_s >= 0) & (localmoran3[, 5] <= 0.05), "quad_sig"] <- 4
joinhex[(localmoran3[, 5] >= 0.05), "quad_sig"] <- 5

jhexmap <- joinhex %>% group_by(id_hex) %>% 
  summarise_at(c("aluguel", "logalug_s", "lag_logalug_s", "quad_sig"), mean, na.rm = TRUE) %>% 
  mutate(sig_r = round(quad_sig, digits = 0))

tm_shape(sao) +
  tm_borders() +
  tm_shape(jhexmap) +
  tm_fill(col = "sig_r", palette = "inferno", breaks = c(1, 2, 3, 4, 5, 6), labels = labels)
```


```{r localmoran5}
localmoran5 <- localmoran(log(join$aluguel), distmatrix5)

join$logalug_s <- scale(log(join$aluguel)) %>% as.vector()
join$lag_logalug_s <- lag.listw(distmatrix5, join$logalug_s)
```


O teste do I de Moran resultou em uma estatística positiva e significativa: isso indica que há dependência espacial no modelo e, por ser positiva, ela assume a forma de clusters em que valores semelhantes encontram-se agregados. A consequência da dependência espacial é a não-validade do modelo MQO tradicional, de forma que é necessário modelar a dependência espacial. Isso será feito nas próximas etapas deste trabalho, em especial por meio do modelo *Spatial Autoregressive* (SAR)


```{r}
my_dist <- st_nearest_feature(df, distritos) %>% 
  cbind(distrito = ., resid_n = df_1$resid_n) %>% 
  as.data.frame() %>% 
  group_by(distrito) %>% 
  summarise(mean(resid_n)) %>% 
  cbind(geometry = 0)

st_as_sf(my_dist, sf_column_name = "geometry")

for(i in 1:nrow(my_dist)) {
  my_dist[i,3] <- distritos$geometry[my_dist$distrito[i]]
}

tm_shape(st_as_sf(my_dist)) +
  tm_polygons(col = "mean(resid_n)")
```

# Modelos espaciais via MV

## SAR
Nota: a matriz knn = 3 teve os melhores resultados de forma geral, por isso foi usada. Adicionalmente, vide LeSage e Pace (2014), não faz tanta diferença quanto se pensava.

### Modelo 3_3
```{r reg_sar33_m3}
reg_sar33_m3 <- lagsarlm(formula = reg3_3$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sar33_m3)
bptest.Sarlm(reg_sar33_m3)

summary(impacts(reg_sar33_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 3_6
```{r reg_sar36_m3}
reg_sar36_m3 <- lagsarlm(formula = reg3_6$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sar36_m3)
bptest.Sarlm(reg_sar36_m3)
summary(impacts(reg_sar36_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 3_9
```{r reg_sar39_m3}
reg_sar39_m3 <- lagsarlm(formula = reg3_9$model,
                       listw= distmatrix3,
                       data = df)

summary(reg_sar39_m3)
bptest.Sarlm(reg_sar39_m3)
summary(impacts(reg_sar39_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

```{r reg_sar39_m5}
reg_sar39_m5 <- lagsarlm(log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima,
                       listw= distmatrix5,
                       data = df)

summary(reg_sar39_m5)
```

```{r}
reg_sar39_m10 <- lagsarlm(log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima,
                       listw= distmatrix10,
                       data = df)

summary(reg_sar39_m10)
```

```{r}
bptest.Sarlm(reg_sar39_m3)
bptest.Sarlm(reg_sar39_m5)
bptest.Sarlm(reg_sar39_m10)
```

### Modelo 4
```{r reg_sar4_m3}
reg_sar4_m3 <- lagsarlm(formula = reg4$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sar4_m3)
bptest.Sarlm(reg_sar4_m3)
summary(impacts(reg_sar4_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_3
```{r reg_sar43_m3}
reg_sar43_m3 <- lagsarlm(log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_se + cmatt60,
                       listw= distmatrix3,
                       data = df)

summary(reg_sar43_m3)
bptest.Sarlm(reg_sar43_m3)
summary(impacts(reg_sar43_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_5
```{r reg_sar45_m3}
reg_sar45_m3 <- lagsarlm(log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima + cmatt60,
                       listw= distmatrix3,
                       data = df)

summary(reg_sar45_m3)
bptest.Sarlm(reg_sar45_m3)
summary(impacts(reg_sar45_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```


### Modelo 4_7
```{r reg_sar47_m3}
reg_sar47_m3 <- lagsarlm(formula = reg4_7$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sar47_m3)
bptest.Sarlm(reg_sar47_m3)
summary(impacts(reg_sar47_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_9
```{r reg_sar49_m3}
reg_sar49_m3 <- lagsarlm(formula = reg4_9$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sar49_m3)
bptest.Sarlm(reg_sar49_m3)
summary(impacts(reg_sar49_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

## SDM

### Modelo 3_3
```{r reg_sdm33_m3}
reg_sdm33_m3 <- lagsarlm(formula = reg3_3$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdm33_m3)
bptest.Sarlm(reg_sdm33_m3)

summary(impacts(reg_sdm33_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 3_9
```{r reg_sdm39_m3}
reg_sdm39_m3 <- lagsarlm(formula = reg3_9$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdm39_m3)
bptest.Sarlm(reg_sdm39_m3)

summary(impacts(reg_sdm39_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4
```{r reg_sdm4_m3}
reg_sdm4_m3 <- lagsarlm(formula = reg4$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdm4_m3)
bptest.Sarlm(reg_sdm4_m3)

summary(impacts(reg_sdm4_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_9
```{r reg_sdm49_m3}
reg_sdm49_m3 <- lagsarlm(formula = reg4_9$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdm49_m3)
bptest.Sarlm(reg_sdm49_m3)
summary(impacts(reg_sdm49_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```


## SDEM

### Modelo 3_3
```{r reg_sdem33_m3}
reg_sdem33_m3 <- errorsarlm(formula = reg3_3$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdem33_m3)
bptest.Sarlm(reg_sdem33_m3)

summary(impacts(reg_sdem33_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 3_9
```{r reg_sdem39_m3}
reg_sdem39_m3 <- errorsarlm(formula = reg3_9$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdem39_m3)
bptest.Sarlm(reg_sdem39_m3)

summary(impacts(reg_sdem39_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4
```{r reg_sdem4_m3}
reg_sdem4_m3 <- errorsarlm(formula = reg4$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdem4_m3)
bptest.Sarlm(reg_sdem4_m3)

summary(impacts(reg_sdem4_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_9
```{r reg_sdem49_m3}
reg_sdem49_m3 <- errorsarlm(formula = reg4_9$model,
                         listw = distmatrix3,
                         data = df,
                         Durbin = TRUE)

summary(reg_sdem49_m3)
bptest.Sarlm(reg_sdem49_m3)
summary(impacts(reg_sdem49_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```


## SEM

### Modelo 3_3
```{r reg_sem33_m3}
reg_sem33_m3 <- errorsarlm(formula = reg3_3$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sem33_m3)
bptest.Sarlm(reg_sem33_m3)
```

### Modelo 3_9
```{r reg_sem39_m3}
reg_sem39_m3 <- errorsarlm(formula = reg3_9$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sem39_m3)
bptest.Sarlm(reg_sem39_m3)
```

### Modelo 4
```{r reg_sem4_m3}
reg_sem4_m3 <- errorsarlm(formula = reg4$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sem4_m3)
bptest.Sarlm(reg_sem4_m3)
```

### Modelo 4_5
```{r reg_sem45_m3}
reg_sem45_m3 <- errorsarlm(formula = reg4_5$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sem45_m3)
bptest.Sarlm(reg_sem45_m3)
```

### Modelo 4_9
```{r reg_sem49_m3}
reg_sem49_m3 <- errorsarlm(formula = reg4_9$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sem49_m3)
bptest.Sarlm(reg_sem49_m3)
```

## SAC

### Modelo 3_3
```{r reg_sac33_m3}
reg_sac33_m3 <- sacsarlm(formula = reg3_3$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sac33_m3)
bptest.Sarlm(reg_sac33_m3)
summary(impacts(reg_sac33_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 3_6
```{r reg_sac36_m3}
reg_sac36_m3 <- sacsarlm(formula = reg3_6$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sac36_m3)
bptest.Sarlm(reg_sac36_m3)
summary(impacts(reg_sac36_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 3_9
```{r reg_sac39_m3}
reg_sac39_m3 <- sacsarlm(formula = reg3_9$model,
                       listw= distmatrix3,
                       data = df)

summary(reg_sac39_m3)
bptest.Sarlm(reg_sac39_m3)
summary(impacts(reg_sac39_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4
```{r reg_sac4_m3}
reg_sac4_m3 <- sacsarlm(formula = reg4$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sac4_m3)
bptest.Sarlm(reg_sac4_m3)
summary(impacts(reg_sac4_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_3

```{r reg_sac43_m3}
reg_sac43_m3 <- sacsarlm(formula = reg4_3$model,
                       listw= distmatrix3,
                       data = df)

summary(reg_sac43_m3)
bptest.Sarlm(reg_sac43_m3)
summary(impacts(reg_sac43_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_5
Variável `dist_farialima` fortemente rejeitada!
```{r reg_sar45}
reg_sac45_m3 <- sacsarlm(log(aluguel) ~ log(area) + banh + andar + arcond	+ gas_chuv	+ mobil	+ novo_ref	+ academia + sauna +
             dist_conserva + dist_zeis1 + dist_zeis5 + qamb +
             dist_metro + dist_cptm + dist_farialima + cmatt60,
                       listw= distmatrix3,
                       data = df)

summary(reg_sac45_m3)
bptest.Sarlm(reg_sac45_m3)
summary(impacts(reg_sac45_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```


### Modelo 4_7
O modelo com `cmatt60` substituindo o cbd, mas mantendo `dist_metro` e `dist_cptm`, tem o terceiro melhor (menor) AIC, mas o melhor cenário é com `cmatt60` + `dist_se`.
```{r reg_sac47_m3}
reg_sac47_m3 <- sacsarlm(formula = reg4_7$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sac47_m3)
bptest.Sarlm(reg_sac47_m3)
summary(impacts(reg_sac47_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```

### Modelo 4_9
```{r reg_sac49_m3}
reg_sac49_m3 <- sacsarlm(formula = reg4_9$model,
                         listw = distmatrix3,
                         data = df)

summary(reg_sac49_m3)
bptest.Sarlm(reg_sac49_m3)
summary(impacts(reg_sac49_m3, tr=trMatc_distmatrix3, R=2000), zstats=TRUE, short=TRUE)
```


```{r}
aic2 <- AIC(reg_sar33_m3, reg_sar36_m3, reg_sar39_m3, reg_sar4_m3, reg_sar43_m3, reg_sar45_m3, reg_sar47_m3, reg_sar49_m3, 
           reg_sac33_m3, reg_sac36_m3, reg_sac39_m3, reg_sac4_m3, reg_sac43_m3, reg_sac45_m3, reg_sac47_m3, reg_sac49_m3,
           reg_sdm33_m3, reg_sdm39_m3, reg_sdm4_m3, reg_sdm49_m3,
           reg_sem33_m3, reg_sem39_m3, reg_sem4_m3, reg_sem49_m3,
           reg_sdem33_m3, reg_sdem39_m3, reg_sdem4_m3, reg_sdem49_m3) %>% 
  arrange(AIC) %>% 
  cbind(modelo = rownames(aic2))

aic2 <- aic2 %>% left_join(aic, by = "modelo")
```


# LM Tests
Todos os testes LM, robustos ou não, indicaram presença de dependência espacial na variável dependente e no erro, com duas exceções: o teste RLMerr ($LM_\lambda$ robusto) para o caso 3_9, cujo p-valor foi 0,54; e para o caso 4_7?, com 0.07 
```{r}
lm.LMtests(reg3_3,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))
  
lm.LMtests(reg3_6,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))

lm.LMtests(reg3_9,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))

lm.LMtests(reg4,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))

lm.LMtests(reg4_3,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))

lm.LMtests(reg4_5,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))

lm.LMtests(reg4_7,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))

lm.LMtests(reg4_9,
           distmatrix3,
           test = c("LMerr", "RLMerr", "LMlag", "RLMlag"))
  
#c(reg3_3, reg3_6, reg3_9, reg4, reg4_3, reg4_5, reg4_7, reg4_9)
```








